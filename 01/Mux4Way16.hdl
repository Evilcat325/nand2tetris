// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/01/Mux4Way16.hdl

/**
 * 4-way 16-bit multiplexor:
 * out = a if sel == 00
 *       b if sel == 01
 *       c if sel == 10
 *       d if sel == 11
 */

CHIP Mux4Way16 {
    IN a[16], b[16], c[16], d[16], sel[2];
    OUT out[16];

    PARTS:
    // Put your code here:
    And(a=sel[0], b=sel[1], out=seld);
    Not(in=sel[0], out=notsel0);
    Not(in=sel[1], out=notsel1);
    And(a=notsel0, b=notsel1, out=sela);
    Xor(a=sel[0], b=sel[1], out=selborc);
    And(a=selborc, b=sel[0], out=selb);
    And(a=selborc, b=sel[1], out=selc);
    Split1to16(in=sela, out=sela16);
    Split1to16(in=selb, out=selb16);
    Split1to16(in=selc, out=selc16);
    Split1to16(in=seld, out=seld16);
    And16(a=a, b=sela16, out=selaout);
    And16(a=b, b=selb16, out=selbout);
    And16(a=c, b=selc16, out=selcout);
    And16(a=d, b=seld16, out=seldout);
    Or16(a=selaout, b=selbout, out=tmp1);
    Or16(a=tmp1, b=selcout, out=tmp2);
    Or16(a=tmp2, b=seldout, out=out);
}
